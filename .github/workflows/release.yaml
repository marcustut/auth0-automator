name: Build native binaries and create GitHub Release

permissions:
  contents: write

on:
  push:
    # Publish semver tags as releases
    tags: [ 'v*.*.*' ]

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        arch:
          - x64
          - arm64
        node-version: 
          - 16
        os:
          - linux
          - macos
          - win
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Set outputs
        id: pkg-action
        run: |
          echo "::group::Setting outputs"
          if [ "${{ matrix.os }}" == "win" ]; then
            echo "file=dist/$(node -p "require('./package.json').name").exe" >> $GITHUB_OUTPUT
          else
            echo "file=dist/$(node -p "require('./package.json').name")" >> $GITHUB_OUTPUT
          fi

          echo "artifact-key=${{ github.event.repository.name }}-node${{ matrix.node-version }}-${{ matrix.os }}-${{ matrix.arch }}-${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "::endgroup::"

      - name: Install pnpm@8.5.1
        run: npm i -g pnpm@8.5.1

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build the executable
        run: pnpm build

      - name: Install pkg@5.8.1
        run: |
          npm install -g pkg@5.8.1
          if pkg --version >/dev/null; then
            echo "::notice title=pkg installed::Using version $(pkg --version)"
          else
            echo "::error title=Cannot run pkg::Cannot seem to find the pkg binary"
          fi

      - name: Package into node binary
        run: |
          pkg \
            --target=node${{ matrix.node-version }}-${{ matrix.os }}-${{ matrix.arch }} \
            --out-path dist \
            --debug \
            .

      - name: Upload ${{ steps.pkg-action.outputs.artifact-key }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.pkg-action.outputs.artifact-key }}
          path: ${{ steps.pkg-action.outputs.file }}
          if-no-files-found: error
          retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: 
          - 16
    steps:
      - uses: actions/download-artifact@v3

      - name: Display structure of downloaded files
        run: ls -R

      - name: Rename files
        run: |
          mv ${{ github.event.repository.name }}-node${{ matrix.node-version }}-win-x64-${{ github.sha }}/${{ github.event.repository.name }}.exe ${{ github.event.repository.name }}-node${{ matrix.node-version }}-win-x64.exe
          mv ${{ github.event.repository.name }}-node${{ matrix.node-version }}-win-arm64-${{ github.sha }}/${{ github.event.repository.name }}.exe ${{ github.event.repository.name }}-node${{ matrix.node-version }}-win-arm64.exe
          mv ${{ github.event.repository.name }}-node${{ matrix.node-version }}-macos-x64-${{ github.sha }}/${{ github.event.repository.name }} ${{ github.event.repository.name }}-node${{ matrix.node-version }}-macos-x64
          mv ${{ github.event.repository.name }}-node${{ matrix.node-version }}-macos-arm64-${{ github.sha }}/${{ github.event.repository.name }} ${{ github.event.repository.name }}-node${{ matrix.node-version }}-macos-arm64
          mv ${{ github.event.repository.name }}-node${{ matrix.node-version }}-linux-x64-${{ github.sha }}/${{ github.event.repository.name }} ${{ github.event.repository.name }}-node${{ matrix.node-version }}-linux-x64
          mv ${{ github.event.repository.name }}-node${{ matrix.node-version }}-linux-arm64-${{ github.sha }}/${{ github.event.repository.name }} ${{ github.event.repository.name }}-node${{ matrix.node-version }}-linux-arm64

      - name: Display structure of renamed files
        run: ls -R

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ github.event.repository.name }}-node${{ matrix.node-version }}-win-x64.exe
            ${{ github.event.repository.name }}-node${{ matrix.node-version }}-win-arm64.exe
            ${{ github.event.repository.name }}-node${{ matrix.node-version }}-macos-x64
            ${{ github.event.repository.name }}-node${{ matrix.node-version }}-macos-arm64
            ${{ github.event.repository.name }}-node${{ matrix.node-version }}-linux-x64
            ${{ github.event.repository.name }}-node${{ matrix.node-version }}-linux-arm64